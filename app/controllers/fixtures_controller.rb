class FixturesController < ApplicationController

    # GET /fixtures
    # GET /fixtures.json
    def index
      @fixtures = Fixture.all

      respond_to do |format|
        format.html # index.html.erb
        format.json { render json: @fixtures }
      end
    end

    # GET /fixtures/1
    # GET /fixtures/1.json
    def show
      @fixture = Fixture.find(params[:id])
 
      respond_to do |format|
        format.html # show.html.erb
        format.xml { render :xml => @expense }
        format.json { render json: @fixture }
      end
    end

    # GET /fixtures/new
    # GET /fixtures/new.json
   

    # GET /fixtures/1/edit
    def edit
      @fixture = Fixture.find(params[:id])
    end

    # POST /fixtures
    # POST /fixtures.json
    def create
      @game = Game.find(params[:game_id]) 
      @fixture = @game.fixtures.create(params[:fixture])

      if  @fixture.valid?
          @fixture.save
          redirect_to game_path(@game)
    else
        @fixture.errors
        flash[:error] = @fixture.errors.full_messages
      
      end
    end

    # PUT /fixtures/1
    # PUT /fixtures/1.json
    def update
      @fixture = Fixture.find(params[:id])

      respond_to do |format|
        if @fixture.update_attributes(params[:fixture])
          format.html { redirect_to @fixture, notice: 'Fixture was successfully updated.' }
          format.json { head :no_content }
        else
          format.html { render action: "edit" }
          format.json { render json: @fixture.errors, status: :unprocessable_entity }
        end
      end
    end

    # DELETE /fixtures/1
    # DELETE /fixtures/1.json
    def destroy
      @game = Game.find(params[:game_id])
        @fixture = @game.fixtures.find(params[:id])
        @fixture.destroy
        redirect_to game_path(@game)
  end
  
  # --------------------------------------------------------------------------------------
  # as_json method for Fixture Rails Model - simply remove the attributes
  # you do not want to send over the wire - send via render :text => object.to_json
  # generated by XcodeTemplate helper (c) jTribe Holdings Pty Ltd 2011 - www.jtribe.com.au
  # --------------------------------------------------------------------------------------

  def as_json
    h = Hash.new
    h[:awayteam] = self.awayteam if !self.awayteam.nil?
    h[:content] = self.content if !self.content.nil?
    h[:created_at] = self.created_at.strftime('%Y-%m-%d %H:%M:%S') if !self.created_at.nil?
    h[:game_id] = self.game_id if !self.game_id.nil?
    h[:hometeam] = self.hometeam if !self.hometeam.nil?
    h[:fixture_id] = self.fixture_id if !self.fixture_id.nil?
    h[:matchdate] = self.matchdate.strftime('%Y-%m-%d %H:%M:%S') if !self.matchdate.nil?
    h[:updated_at] = self.updated_at.strftime('%Y-%m-%d %H:%M:%S') if !self.updated_at.nil?
    return h
  end
  
end
